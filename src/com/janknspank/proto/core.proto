// Core definitions for NewsServer protos.

import "google/protobuf/descriptor.proto";

option java_package = "com.janknspank.proto";

// For legacy reasons, these default to true. However, as of version 2.3.0
// (January 2010), it is considered preferable for RPC implementations to
// provide code generator plugins to generate code more specific to each
// system, rather than rely on the "abstract" services.
option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;

enum Required {
  // This field must be set for its parent message to be valid.
  YES = 1;

  // This field is optional.
  NO = 2;
};

enum StorageMethod {
  // Default: Just throw this field into an opaque unindexed blob that will
  // be deserialized once we read it on the Java side.
  BLOB = 1;

  // Use this field as the primary key.
  PRIMARY_KEY = 2;

  // Pull out this field into its own row and put an index on it.
  INDEX = 3;

  // Pull out this field into its own row and put an unique index on it (that
  // is, all values in this column will be unique).
  UNIQUE_INDEX = 4;

  // Pull out this field into its own row in the MySQL schema, but do not
  // index it.
  PULL_OUT = 5;
};

enum ClientSerialization {
  // Include this field in responses to the client, serialized with default
  // handling.
  INCLUDE = 1;

  // Include this field in responses to the client, serializing it as a
  // number even if precision / bits may be lost.
  INCLUDE_AS_NUMBER = 2;

  // Do not include this field in responses to the client.
  EXCLUDE = 3;
};

extend google.protobuf.FieldOptions {
  optional Required required = 60001 [default = NO];
  optional StorageMethod storage_method = 60002 [default = BLOB];
  optional int32 string_length = 60003 [default = -1];
  optional ClientSerialization client_serialization = 60004 [default = INCLUDE];
}

message Article {
  optional string url_id = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 24
  ];

  optional string url = 2 [
    (required) = YES,
    (string_length) = 767
  ];

  optional string title = 3 [
    (required) = YES,
    (string_length) = 256
  ];

  optional string type = 4 [
    (string_length) = 24
  ];

  optional string author = 5 [
    (string_length) = 256
  ];

  optional string copyright = 6 [
    (string_length) = 256
  ];

  optional string description = 7 [
    (required) = YES,
    (string_length) = 767
  ];

  optional string image_url = 8 [
    (string_length) = 767
  ];

  optional string article_body = 9 [
    (required) = YES,
    (client_serialization) = EXCLUDE,
    (string_length) = 102400
  ];

  optional int64 published_time = 10 [
    (required) = YES,
    (storage_method) = INDEX
  ];

  optional int64 modified_time = 11;
}

message ArticleKeyword {
  optional string article_id = 1 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24,
    (client_serialization) = EXCLUDE
  ];

  // the literal English keyword
  optional string keyword = 2 [
    (required) = YES,
    (storage_method) = PULL_OUT,
    (string_length) = 50
  ];

  // number of occurences + other factors.
  optional int32 strength = 3 [
    (required) = YES
  ];

  // 'o' for organization, 'p' for person, 'l' for location, 'k' for keywords
  // found in the article's meta tags.
  optional string type = 4 [
    (required) = YES,
    (storage_method) = PULL_OUT,
    (string_length) = 20
  ];
}

message Link {
  optional string origin_url_id = 1 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional string destination_url_id = 2 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional int64 discovery_time = 3 [
    (required) = YES
  ];

  optional int64 last_found_time = 4 [
    (required) = YES
  ];
}

message Url {
  optional string url = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 767
  ];

  optional string id = 2 [
    (required) = YES,
    (storage_method) = UNIQUE_INDEX,
    (string_length) = 24
  ];

  optional int64 tweet_count = 3 [
    (required) = YES
  ];

  optional int64 discovery_time = 4 [
    (required) = YES
  ];

  optional int64 last_crawl_time = 5;

  // Score between 0 to 200, where 200 means "we really should crawl this
  // ASAP", and 0 means we might not even bother.
  // General guidelines:
  // 2000 - A news article from today
  // 100 - A news article from a year ago
  // 10 - A page that's not a news article
  // 0 - Something we've crawled recently
  optional int64 crawl_priority = 6 [
    // (required) = YES,
    (storage_method) = INDEX
  ];
}

message User {
  optional string id = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 24
  ];

  optional string name = 2 [
    (string_length) = 100
  ];

  optional string email = 3 [
    (required) = YES,
    (storage_method) = UNIQUE_INDEX,
    (string_length) = 100
  ];

  optional string linked_in_id = 4 [
    (string_length) = 24
  ];

  optional string facebook_id = 5 [
    (string_length) = 24
  ];

  optional string password_sha256 = 6 [
    (required) = YES,
    (storage_method) = PULL_OUT,
    (string_length) = 50,
    (client_serialization) = EXCLUDE
  ];

  optional int64 create_time = 7 [
    (required) = YES
  ];

  optional int64 last_login_time = 8;
}

message Session {
  optional string session_key = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 128
  ];

  optional string user_id = 2 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional int64 create_time = 3 [
    (required) = YES
  ];
}

message LinkedInData {
  optional string user_id = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 24
  ];

  optional string raw_data = 2 [
    (required) = YES,
    (string_length) = 102400
  ];

  optional int64 create_time = 3 [
    (required) = YES
  ];
}

message LinkedInConnectionsData {
  optional string user_id = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 24
  ];

  optional string raw_data = 2 [
    (required) = YES,
    (string_length) = 102400
  ];

  optional int64 create_time = 3 [
    (required) = YES
  ];
}

message AddressBookData {
  optional string user_id = 1 [
    (required) = YES,
    (storage_method) = PRIMARY_KEY,
    (string_length) = 24
  ];

  optional string raw_data = 2 [
    (required) = YES,
    (string_length) = 102400
  ];

  optional int64 create_time = 3 [
    (required) = YES
  ];
}

message UserUrlRating {
  optional string user_id = 1 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional string url_id = 2 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional int32 rating = 3 [
    (required) = YES
  ];

  optional int64 create_time = 4 [
    (required) = YES
  ];
}

message UserUrlFavorite {
  optional string user_id = 1 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional string url_id = 2 [
    (required) = YES,
    (storage_method) = INDEX,
    (string_length) = 24
  ];

  optional int64 create_time = 3 [
    (required) = YES
  ];
}
